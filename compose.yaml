version: '3.8'

services:
  reverse-proxy:
    image: haproxy:2.4
    restart: always
    networks:
        backend: {}
    ports:
      - "0.0.0.0:8080:8080"
    volumes:
      - ./haproxy/reverse/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:rw

  ingress-proxy:
    image: nginx:1.21.1
    restart: always
    network_mode: host
    volumes:
      - ./nginx/ingress/default.conf:/etc/nginx/conf.d/default.conf:rw
      - ./nginx/ingress/nginx.conf:/etc/nginx/nginx.conf:rw

  mysql:
    image: mysql:8.0-oraclelinux8
    environment:
      - MYSQL_USER=app
      - MYSQL_DATABASE=example
      - MYSQL_ROOT_HOST=web
    env_file: "mysql_compose.list.env"
#    healthcheck:
#      test: mysqladmin ping -h 127.0.0.1 -u $$MYSQL_USER --password=$$MYSQL_PASSWORD
#      start_period: 5s
#      interval: 5s
#      timeout: 5s
#      retries: 55
    networks:
      backend:
        ipv4_address: 172.20.0.10
    restart: on-failure

  web:
    image: web_app_py:1.0.0
    environment:
      - DB_HOST=mysql
      - DB_USER=app
      - DB_NAME=example
      - DB_TABLE=requests_new
    env_file: "web_compose.list.env"
    networks:
      backend:
        ipv4_address: 172.20.0.5
#    depends_on:
#      mysql:
#        condition: service_healthy
#    restart: on-failure

networks:
  backend:
    driver: overlay
    attachable: true
    ipam:
     config:
       - subnet: 172.20.0.0/24
